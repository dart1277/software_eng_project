package gui.cipherModule;

import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;

/**
 * Class allowing generation of safe random byte array based on given password
 *
 * @author Pawe≈Ç Talaga
 * @version 1.1
 * @since 2018-13-03
 */
public class
KeyStringRefiner {

    /**
     * Method creating random key in the form of byte array for given password
     *
     * @throws InvalidKeySpecException invalid key
     * @throws NoSuchAlgorithmException bad agorithm
     * @param key String password being the seed for random generation of bytes
     * @return randomly generated byte array
     */
    public static byte[] refine(String key) throws InvalidKeySpecException, NoSuchAlgorithmException {

        int pswdIterations = 65536;
        int keySize = 128;
        byte[] saltBytes = {0, 1, 2, 3, 4, 5, 6};

        SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");

        PBEKeySpec spec = new PBEKeySpec(
                key.toCharArray(),
                saltBytes,
                pswdIterations,
                keySize
        );

        SecretKey secretKey = factory.generateSecret(spec);

        return secretKey.getEncoded();

    }
}
